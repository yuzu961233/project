#include <stdio.h>
#include <time.h>
#include <stdlib.h>

 int card[52];	/*カード保存用配列*/
 int player[16];/*プレイヤーの手札保存用配列*/
 int dealer[16];/*ディーラーの手札保存用配列*/
 int pmai;		/*プレイヤーの手札枚数保存用*/
 int dmai;		/*ディーラーの手札枚数保存用*/
 int dist;		/*配布済みカードの位置保存用*/
 int pscore;	/*プレイヤーの手札合計用変数*/
 int dscore;	/*ディーラーの手札合計用変数*/

 /*プロトタイプ宣言*/
 void card_set(void);
 void shuffle(void);
 int card_dist(void);
 void card_release(int);
 void card_sum(void);
 int win_lose(void);
 void card_screen(int);



void main(void)	{
	int i,flg,flg2;
	int cont;
	int next;
	int winner;
	i = 0;
	flg = 0;
	while(flg == 0){
		card_set();
		shuffle();
		player[pmai] = card_dist();
		pmai++;
		player[pmai] = card_dist();
		dealer[dmai] = card_dist();
		dmai++;
		dealer[dmai] = card_dist();
		card_release(0);
		/*プレイヤー処理開始*/
		while (1){
			card_sum();
			if(pmai == 1 && pscore == 21){
				break;
			} else if(pscore == 21)	{
				break;
			} else if(pscore > 21){
				break;
			} else {
				printf("HIT(0)　or STAND(1) ? ⇒　");
				scanf("%d", &next);
				if(next == 1)	{
					break;
				}
			}
			/*カードを一枚引く*/
			pmai++;
			player[pmai] = card_dist();
			/*プレイヤーとディーラーのカードを再表示*/
			card_release(0);
		}
		/*プレイヤーの処理終了*/
		/*ディーラーの処理開始*/
		while(1){
			card_sum();
			if(dmai == 1 && dscore == 21){
				break;
			} else if(dscore == 21)	{
				break;
			} else if(dscore >= 17){
				break;
			} 
			/*カードを一枚引く*/
			dmai++;
			dealer[dmai] = card_dist();
		
		}
		/*プレイヤーとディーラーのカードを再表示*/
		printf("************************************************\n");
		card_release(0);
		printf("************************************************\n");
		/*手札の合計値と勝敗結果を表示する*/
		printf("\nプレイヤーの手札：%d　　ディーラーの手札：%d\n", pscore, dscore);
		
		winner = win_lose();
		if (winner ==0)	{
		printf("**************ＤＥＡＬＥＲ　ＷＩＮ**************\n");
		} else if (winner == 1)	{
			printf("**************ＰＬＡＹＥＲ　ＷＩＮ*************\n");
		} else {
			printf("*******************ＤＲＯＷ******************\n");
		}
		printf("\n");
		printf("\n");
		printf("****************ＣＯＮＴＩＮＵＥ？****************\n");
		printf("\n");
		printf("ＹＥＳ(0) or ＮＯ(1) ？　⇒　");
		flg2 = 0;
		while(flg2 == 0){
			scanf("%d", &cont);
				if(cont == 0){
					flg2 = 1;
					printf("\n");
					printf("(｀・ω・´)ｼｬｷｰﾝ!\n");
					printf("\n");
					
				}else if(cont == 1){
					flg2 = 1;
					flg = 1;
					printf("\n");
					printf("(´・ω・｀)ｼｮﾎﾞｰﾝ\n");
					printf("\n");
				}else if(cont < 2){
					printf("\n");
					printf("*********入力エラー*********\n");
					printf("┌(┌＾o＾)┐＾o＾)┐＾o＾）┐ﾎﾓｫ...\n");
					i++;
					printf("\n");
					printf("ＹＥＳ(0) or ＮＯ(1) ？　⇒　");
				}else if(cont < 2 && i > 2){
					printf("\n");
					printf("*********入力エラー*********\n");
					printf("┌(┌＾o＾)┐＾o＾)┐＾o＾）┐ﾎﾓｫ...\n");
					printf("┌(┌＾o＾)┐＾o＾)┐＾o＾）┐ﾎﾓｫ...\n");
					printf("┌(┌＾o＾)┐＾o＾)┐＾o＾）┐ﾎﾓｫ...\n");
					printf("┌(┌＾o＾)┐＾o＾)┐＾o＾）┐ﾎﾓｫ...\n");
					i++;
					printf("\n");
					printf("ＹＥＳ(0) or ＮＯ(1) ？　⇒　");
				}else if(cont > -1 && i > 2){
					printf("\n");
					printf("*********入力エラー*********\n");
					printf("┌(┌＾o＾)┐＾o＾)┐＾o＾）┐ﾎﾓｫ...\n");
					printf("┌(┌＾o＾)┐＾o＾)┐＾o＾）┐ﾎﾓｫ...\n");
					printf("┌(┌＾o＾)┐＾o＾)┐＾o＾）┐ﾎﾓｫ...\n");
					printf("┌(┌＾o＾)┐＾o＾)┐＾o＾）┐ﾎﾓｫ...\n");
					i++;
					printf("\n");
					printf("ＹＥＳ(0) or ＮＯ(1) ？　⇒　");
				}else {
					printf("\n");
					printf("*********入力エラー*********\n");
					printf("┌(┌＾o＾)┐＾o＾)┐＾o＾）┐ﾎﾓｫ...\n");
					i++;
					printf("\n");
					printf("ＹＥＳ(0) or ＮＯ(1) ？　⇒　");
					
				}
			}
		
		}

	}

void card_set(void){
	int i;
	for(i = 0; i < 52; i++)	{
		card[i] = i+1;
	}
	for(i = 0; i < 16; i++)	{
		player[i] = -1;
		dealer[i] = -1;
	}
	pmai = 0;
	dmai = 0;
	dist = 0;
}

void shuffle(void)	{
	int r, wk, ch;
	srand ((unsigned int)time(NULL));
	for(r = 52; r > 0; r--)	{
		ch = rand() % r;
		wk = card[r-1];
		card[r-1] = card[ch];
		card[ch] = wk;
	}
}

int card_dist(void){
	int pickup;		/*引いたカードを格納する変数*/
	pickup = card[dist];
	dist++;
	return pickup;
}

void card_release(int flg)	{
	char number [13][3] = {
		"K","A","2","3","4","5","6","7","8","9","10","J","Q"
	};
	int i;
	printf("PLAYER:\n");
	for (i = 0; i <= pmai; i++)	{
		printf("%d枚目: %s\n", i+1, number[player[i] % 13]);
		if (number[player[i] % 13] == number[1]){
			printf("+-------+\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|   *   |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("+-------+.1\n");
		}else if (number[player[i] % 13] == number[2]){
			printf("+-------+\n");
			printf("|      *|\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|*      |\n");
			printf("+-------+.2\n");
		}else if (number[player[i] % 13] == number[3]){
			printf("+-------+\n");
			printf("|      *|\n");
			printf("|       |\n");
			printf("|   *   |\n");
			printf("|       |\n");
			printf("|*      |\n");
			printf("+-------+.3\n");
		}else if (number[player[i] % 13] == number[4]){
			printf("+-------+\n");
			printf("|*     *|\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|*     *|\n");
			printf("+-------+.4\n");
		}else if (number[player[i] % 13] == number[5]){
			printf("+-------+\n");
			printf("|*     *|\n");
			printf("|       |\n");
			printf("|   *   |\n");
			printf("|       |\n");
			printf("|*     *|\n");
			printf("+-------+.5\n");
		}else if (number[player[i] % 13] == number[6]){
			printf("+-------+\n");
			printf("|*     *|\n");
			printf("|       |\n");
			printf("|*     *|\n");
			printf("|       |\n");
			printf("|*     *|\n");
			printf("+-------+.6\n");
		}else if (number[player[i] % 13] == number[7]){
			printf("+-------+\n");
			printf("|*     *|\n");
			printf("|       |\n");
			printf("|*  *  *|\n");
			printf("|       |\n");
			printf("|*     *|\n");
			printf("+-------+.7\n");
		}else if (number[player[i] % 13] == number[8]){
			printf("+-------+\n");
			printf("|*     *|\n");
			printf("|   *   |\n");
			printf("|*     *|\n");
			printf("|   *   |\n");
			printf("|*     *|\n");
			printf("+-------+.8\n");
		}else if (number[player[i] % 13] == number[9]){
			printf("+-------+\n");
			printf("|*  *  *|\n");
			printf("|       |\n");
			printf("|*  *  *|\n");
			printf("|       |\n");
			printf("|*  *  *|\n");
			printf("+-------+.9\n");
		}else if (number[player[i] % 13] == number[10]){
			printf("+-------+\n");
			printf("|*  *  *|\n");
			printf("|   *   |\n");
			printf("|*     *|\n");
			printf("|   *   |\n");
			printf("|*  *  *|\n");
			printf("+-------+.10\n");
		}else if (number[player[i] % 13] == number[11]){
			printf("+-------+\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|   J   |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("+-------+.J\n");
		}else if (number[player[i] % 13] == number[12]){
			printf("+-------+\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|   Q   |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("+-------+.Q\n");
		}else{
			printf("+-------+\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|   K   |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("+-------+.K\n");
		}	
	}
	printf("\n");
	printf("DEALER:\n");
	for (i = 0; i <= dmai; i++){
		if(flg == 0 && i == 1) {
			printf("%d枚目：＊\n", i+1);
		}else{
			printf("%d枚目：%s\n", i +1, number[dealer[i] % 13]);
		}
		if(flg == 0 && i == 1){
			printf("+-------+\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|  ＊   |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("+-------+.＊\n");
		}else if (number[dealer[i] % 13] == number[1]){
			printf("+-------+\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|   *   |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("+-------+.1\n");
		}else if (number[dealer[i] % 13] == number[2]){
			printf("+-------+\n");
			printf("|      *|\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|*      |\n");
			printf("+-------+.2\n");
		}else if (number[dealer[i] % 13] == number[3]){
			printf("+-------+\n");
			printf("|      *|\n");
			printf("|       |\n");
			printf("|   *   |\n");
			printf("|       |\n");
			printf("|*      |\n");
			printf("+-------+.3\n");
		}else if (number[dealer[i] % 13] == number[4]){
			printf("+-------+\n");
			printf("|*     *|\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|*     *|\n");
			printf("+-------+.4\n");
		}else if (number[dealer[i] % 13] == number[5]){
			printf("+-------+\n");
			printf("|*     *|\n");
			printf("|       |\n");
			printf("|   *   |\n");
			printf("|       |\n");
			printf("|*     *|\n");
			printf("+-------+.5\n");
		}else if (number[dealer[i] % 13] == number[6]){
			printf("+-------+\n");
			printf("|*     *|\n");
			printf("|       |\n");
			printf("|*     *|\n");
			printf("|       |\n");
			printf("|*     *|\n");
			printf("+-------+.6\n");
		}else if (number[dealer[i] % 13] == number[7]){
			printf("+-------+\n");
			printf("|*     *|\n");
			printf("|       |\n");
			printf("|*  *  *|\n");
			printf("|       |\n");
			printf("|*     *|\n");
			printf("+-------+.7\n");
		}else if (number[dealer[i] % 13] == number[8]){
			printf("+-------+\n");
			printf("|*     *|\n");
			printf("|   *   |\n");
			printf("|*     *|\n");
			printf("|   *   |\n");
			printf("|*     *|\n");
			printf("+-------+.8\n");
		}else if (number[dealer[i] % 13] == number[9]){
			printf("+-------+\n");
			printf("|*  *  *|\n");
			printf("|       |\n");
			printf("|*  *  *|\n");
			printf("|       |\n");
			printf("|*  *  *|\n");
			printf("+-------+.9\n");
		}else if (number[dealer[i] % 13] == number[10]){
			printf("+-------+\n");
			printf("|*  *  *|\n");
			printf("|   *   |\n");
			printf("|*     *|\n");
			printf("|   *   |\n");
			printf("|*  *  *|\n");
			printf("+-------+.10\n");
		}else if (number[dealer[i] % 13] == number[11]){
			printf("+-------+\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|   J   |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("+-------+.J\n");
		}else if (number[dealer[i] % 13] == number[12]){
			printf("+-------+\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|   Q   |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("+-------+.Q\n");
		}else if (number[dealer[i] % 13] == number[0]){
			printf("+-------+\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("|   K   |\n");
			printf("|       |\n");
			printf("|       |\n");
			printf("+-------+.K\n");
		
		}


			

	}
		printf("\n");

}

void card_sum(void){
	int i;
	pscore = 0;
	dscore = 0;
	/*プレイヤーの手札の合計を求める*/
	for (i = 0; i <= pmai; i++)	{
		if (player[i] % 13 > 10 || player[i] % 13 == 0)	{
			pscore += 10;
		} else if(player[i] % 13 == 1 && pscore + 11 <= 21) {
			pscore += 11;
		} else {
			pscore += (player[i] % 13);
		}
	}
	/*ディーラーの手札の合計を求める*/
	for (i = 0; i <= dmai; i++)	{
		if (dealer[i] % 13 > 10 || dealer[i] % 13 == 0)	{
			dscore += 10;
		} else if(dealer[i] % 13 == 1 && dscore + 11 <= 21) {
			dscore += 11;
		} else {
			dscore += (dealer[i] % 13);
		}
	}
}

int win_lose(void)	{
	if (pscore > 21)	{	/*プレイヤーバースト*/
		return 0;
	}else if (dscore > 21)	{	/*ディーラーバースト*/
		return 1;
	}
	else if(pmai == 1 && pscore == 21)	{	/*プレイヤーがBJのとき*/
		if(dmai == 1 && dscore == 21)	{	/*ディーラーもBJのとき*/
			return 2;
		} else {	/*プレイヤーのみがBJのとき*/
			return 1;
		}
	} else if (pscore > dscore)	{	/*プレイヤーの合計値が大きいとき*/
		return 1;
	} else if (dscore > pscore)	{	/*ディーラーの合計値が大きいとき*/
		return 0;
	} else {
		return 2;
	}
}

